#include <LiquidCrystal.h>

// initialize the library with The numbers of the interface pins
LiquidCrystal lcd(PE_4, PE_5, PD_0, PD_1, PD_2, PD_3);

//LED değişkenleri
//const int ledPin =  GREEN_LED; 
const int ledPin = RED_LED;
const int ledPin3 = BLUE_LED;

//Butonların pin numarası
const int yirmibes = 28;    
const int elli = 19;
const int bir = 38;
const int paraBitis = 29;
const int su = 36;
const int cay = 35;
const int kahve  = 34;
const int cikolata = 33;
const int biskuvi = 32;
const int siparisBitis = 13;
const int resetTusu = 31;

//Kullanıcı Bakiye Değişkenleri
int yirmibesK = 0;
int elliK = 0;
int birTL = 0;
int tempYirmibes = 0;
int tempElli = 0;
int tempBir = 0;
float kullanicibakiye;

//Sipariş Değişkenleri
int ssu = 0;
int scay = 0;
int skahve = 0;
int scikolata = 0;
int sbiskuvi = 0;
int tempSu = 0;
int tempCay = 0;
int tempKahve = 0;
int tempCikolata = 0;
int tempBiskuvi = 0;


// Butonlar için değişkenler
int yirmibesDurumu = 0;         
int elliDurumu = 0;
int birDurumu=0;
int paraBitisDurumu = 0;
int suDurumu = 0;
int cayDurumu = 0;
int kahveDurumu = 0;
int cikolataDurumu = 0;
int biskuviDurumu = 0; 
int siparisBitisDurumu = 0;
int resetTusuDurumu = 0;
int i = 0;

const char *input[] = {"20,20,10","1,su,30,0.5","2,cay,20,1.0","3,kahve,15,1.5","4,cikolata,50,1.75","5,biskuvi,100,2.0"};
struct urun{
    int urunId;
    char urunAd[30];
    int urunStok;
    float urunFiyat;
}urunler[5];

struct hesap{
    int para[3];

}banka;

void kasabilgilerinial(char gelensatir[30])
{
    int x=0;
    char *line ;
    char const virgul[2] = "," ;
    line = strtok(gelensatir,virgul);
    while(line != NULL)
    {
        // 20 -> int 20
        banka.para[x] = atoi(line);
        line = strtok(NULL,virgul);
        x++;
    }
}

void urunbilgilerinial(char satir[] , int sayi)
{
    int x = 0 ;
    char *line ;
    char const virgul[2] = "," ;
    line = strtok(satir,virgul);
    while(line != NULL)
    {
        // x = 0 iken ürünün id
        if(x == 0)
        {
            urunler[sayi].urunId = sayi+1 ;
        }
            // x = 1 ne alıyorum nereye göndercem
            // x = 1 -> ürünün ismi var
        else if(x == 1 )
        {
            strcpy(urunler[sayi].urunAd,line);
        }

        else if(x==2)
            urunler[sayi].urunStok=atoi(line);
        else if(x==3)
            urunler[sayi].urunFiyat=atof(line);
        // yazacağın yer  = atoi(string) ;


        line = strtok(NULL,virgul);
        x++ ;
    }
}

float bakiyeyukle(int yirmibes, int ellikurus, int birtl)
{
    float toplam=0;
    toplam+=yirmibes*0.25;
    toplam+=ellikurus*0.50;
    toplam+=birtl*1.0;
    banka.para[0]+=yirmibes;
    banka.para[1]+=ellikurus;
    banka.para[2]+=birtl;
    //printf("\nKullanicinin Yukledigi Para Miktari: %0.2f TL\n",toplam);

    return toplam;
}

void kasayigoster(){
   // printf("\nKasadaki Guncel Bakiye Degerleri:\n");
  //  printf("25 Kurus Sayisi: %d \n50 Kurus Sayisi: %d \n1 TL Sayisi: %d\n",banka.para[0],banka.para[1],banka.para[2]);
    float toplam = (banka.para[0]*0.25)+(banka.para[1]*0.5)+(banka.para[2]*1);
    Serial.print("\nKasadaki Para Miktarı\n");
    Serial.print("0.25TL: ");
    Serial.print(banka.para[0]);
    Serial.print(" tane\n");
    Serial.print("0.50TL: ");
    Serial.print(banka.para[1]);
    Serial.print(" tane\n");
    Serial.print("1TL: ");
    Serial.print(banka.para[2]);
    Serial.print(" tane\n");
    Serial.print("Kasa: ");
    Serial.print(toplam);
    Serial.print(" TL");
    
    lcd.clear();
    lcd.print("Kasa: ");
    lcd.print(toplam);
    lcd.print("TL");
    
}

//LCD ekrana sığamayacağı için bu fonksiyon devredışı bırakılabilir.
void urunlerigoster(){
    printf("\nUrun Bilgileri \nUrun Adi\t Urun Stogu\t Urun Fiyati\n");
    for (int i = 0; i < 5; i++)
    {
        printf("%s, \t\t %d, \t\t%0.2f \n",urunler[i].urunAd,urunler[i].urunStok,urunler[i].urunFiyat);
    }
}


void urunsec(int a, int b,int c,int d,int f,float kullanicibakiye,float guncelbakiye){
    float harcamatutari=0;
    float paraustu=0;
    int ust=0, urunkontrol=0;
// Stok Kontrolu Islemi
    for(int i; i<5; i++)
    {   if(i==0) {
            if(a>urunler[i].urunStok){
                printf("Sectiginiz %s urunu elimizde yeteri kadar bulunmadigi icin tahsil edilememektedir.",urunler[i].urunAd);
                a=0;
            }
        }
        if(i==1) {
            if(b>urunler[i].urunStok){
                printf("Sectiginiz %s urunu elimizde yeteri kadar bulunmadigi icin tahsil edilememektedir.",urunler[i].urunAd);
                b=0;
            }
        }
        if(i==2) {
            if(c>urunler[i].urunStok){
                printf("Sectiginiz %s urunu elimizde yeteri kadar bulunmadigi icin tahsil edilememektedir.",urunler[i].urunAd);
                c=0;
            }
        }
        if(i==3) {
            if(d>urunler[i].urunStok){
                printf("Sectiginiz %s urunu elimizde yeteri kadar bulunmadigi icin tahsil edilememektedir.",urunler[i].urunAd);
                d=0;
            }
        }
        if(i==4) {
            if(f>urunler[i].urunStok){
                printf("Sectiginiz %s urunu elimizde yeteri kadar bulunmadigi icin tahsil edilememektedir.",urunler[i].urunAd);
                f=0;
            }
        }

    }
    for (int i = 0; i <5 ; ++i) {
        if(i==0)
            harcamatutari+=a*urunler[i].urunFiyat;
        if(i==1)
            harcamatutari+=b*urunler[i].urunFiyat;
        if(i==2)
            harcamatutari+=c*urunler[i].urunFiyat;
        if(i==3)
            harcamatutari+=d*urunler[i].urunFiyat;
        if(i==4)
            harcamatutari+=f*urunler[i].urunFiyat;
    }

    printf("\nSecilen Urunler icin Harcanacak Tutar: %0.2f\n",harcamatutari);
    lcd.clear();
    lcd.print("Siparis:");
    lcd.print(harcamatutari);
    lcd.print("TL");
    delay(4000);
    
    if(harcamatutari>kullanicibakiye){
      //printf("\nAlisveris icin Bakiyeniz Yetersiz. ");
        lcd.clear();
        lcd.print("Bakiye yetersiz.");
        delay(4000);
    }// Kullanıcının Parasının Yetmemesi Durumu
        
    else if (harcamatutari==kullanicibakiye){
      //printf("\nAlisveris Gerceklesir... Para ustu yok.\n");
        lcd.clear();
        lcd.print("Para ustu yok.");
        delay(4000);
    }// Paranın Tam Yetmesi Durumu
       
    else if(harcamatutari<kullanicibakiye)//Verilen Paranın Harcamadan Fazla Olması Paraustu Verilecek
    {
        //printf("\nKullanici bakiyesi: %0.2f, Harcama Tutari: %0.2f",kullanicibakiye,harcamatutari);
        paraustu=kullanicibakiye-harcamatutari;
        //printf("\nVerilecek Para Ustumuz: %0.2f \nPara Ustu Hesaplaniyor...\n",paraustu);

        //sleep(2);
        while(paraustu!=0.0)
        {
            paraustu-=0.25;
            ust++;
        }
        int birtl=ust/4;
        ust%=4;
        int ellikurus=ust/2;
        ust%=2;
        // 1TL 50Krs ve 25Krslarin sayisinin kontrolu
        if(birtl>banka.para[2]){
            printf("Para ustu verilemiyor, bozuk 1 TL yetersiz");
        }
        if(ellikurus>banka.para[1]){
            printf("Para ustu verilemiyor, bozuk 50 Kurus yetersiz");
        }
        if(ust>banka.para[0]){
            printf("Para ustu verilemiyor, bozuk 25 Kurus yetersiz");
        }
        //printf("\nVerilecekler Bozuk Paralar \n 1 TL Sayisi: %d, 50 Kurus Sayisi: %d, 25 Kurus Sayisi: %d\n",birtl,ellikurus,ust);
        //1 TL Miktarı
        lcd.clear();
        lcd.print(birtl);
        lcd.print("tane 1TL");
        delay(4000);
        //0.50 TL Miktarı
        lcd.clear();
        lcd.print(ellikurus);
        lcd.print("tane 0.5TL");
        delay(4000);
        //0.25 TL Miktarı
        lcd.clear();
        lcd.print(ust);
        lcd.print("tane 0.25TL");
        delay(4000);
        banka.para[0]-=ust;
        banka.para[1]-=ellikurus;
        banka.para[2]-=birtl;
        //sleep(2);
    }
}

void konsoldaKasa(){
  
}

void konsoldaSiparisler(){
  
}

void bilgigonder()
{
    //Bu kod yorum satırına alınacak
    //int yirmibeskurus=5,ellikurus=10,birtl=15; //Kullanıcı Girdisi

    //int a=2,b=2,c=2,d=2,f=2; // Alınacak Ürünler
    char temp[30];
    strcpy(temp,input[0]);//20 20 10 -> temp
    kasabilgilerinial(temp);
    int i ;
    int sayi = 0  ;
    for(int i = 1 ; i < 6 ; i++)
    {
        strcpy(temp,input[i]);
        urunbilgilerinial(temp,sayi);
        sayi++ ;
    }

    kasayigoster();
    //urunlerigoster();
    float guncelbakiye=(banka.para[0]*0.25)+(banka.para[1]*0.5)+(banka.para[2]*1); //Kasadaki Toplam Para
    
    
    //yirmibeskurus, ellikurus, birt1 değişkenlerine butonlar ile değer atayan fonksiyon burada çağıralacak
    //lcd.print("BEFORE");
    //delay(3000);
    kullanicibakiye=bakiyeyukle(yirmibesK,elliK,birTL); // Kullanici Bakiyesi

    urunsec(ssu,scay,skahve,scikolata,sbiskuvi,kullanicibakiye,guncelbakiye);

    kasayigoster();

}

void bakiye(){
  //Butonlarla alınan kullanıcı bakiyesini gerekli değişkenlere atama
  yirmibesK = tempYirmibes;
  elliK = tempElli;
  birTL = tempBir;
  tempYirmibes = 0;
  tempElli = 0;
  tempBir = 0;
  float toplam = (yirmibesK*0.25) + (elliK*0.5) + (birTL*1);
  kullanicibakiye = toplam;
  lcd.clear();
  lcd.print(toplam);
  lcd.print("TL attiniz.");
  Serial.print("0.25TL:");
  Serial.print(yirmibesK);
  Serial.print("tane\n");
  Serial.print("0.50TL:");
  Serial.print(elliK);
  Serial.print("tane\n");
  Serial.print("1TL:");
  Serial.print(birTL);
  Serial.print("tane\n");
  //Sprintf("0.25TL: " +yirmibesK + "0.50TL: ", +elliK + "1TL: ", + birTL);
  Serial.print("Kullanıcı Bakiyesi:");
  Serial.print(toplam,2);
  //Serial.println(a,2);
  //sprintf(deneme,"%d kere geldim %d kere gittim",4,5);
  //Serial.println(deneme);
  //delay(600);
  
  int temp;
  temp = paraSikismasi();
  if(temp == 2){
    delay(500); 
    digitalWrite(ledPin, HIGH);   // turn the LED on (HIGH is the voltage level)
    delay(1000);               // wait for a second
    digitalWrite(ledPin, LOW);
    Serial.print("\nPara sıkıştı.");
  }
}
void siparisYukle(){
   //Butonlarla alınan kullanıcı siparişlerini gerekli değişkenlere atama
   ssu = tempSu;
   scay = tempCay;
   skahve = tempKahve;
   scikolata = tempCikolata;
   sbiskuvi = tempBiskuvi;
   tempSu = 0;
   tempCay = 0;
   tempKahve = 0;
   tempCikolata = 0;
   tempBiskuvi = 0;
   
   float toplam = (ssu*0.5) + (scay*1) + (skahve*1.50) + (scikolata*1.75) + (sbiskuvi*2);
   
   bilgigonder();
}

int paraSikismasi(){
  int deger;
  deger = random(1,5);
  return deger;
}

void sifirla(){
   ssu = 0;
   scay = 0;
   skahve = 0;
   scikolata = 0;
   sbiskuvi = 0;
   birTL=0;
   elliK=0;
   yirmibesK=0;
}



void setup() {
  // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
  Serial.begin(9600);
  
  // initialize the LED pin as an output:
  pinMode(ledPin, OUTPUT);      
  pinMode(ledPin3, OUTPUT);
  
  pinMode(yirmibes, INPUT_PULLUP);     
  pinMode(elli, INPUT_PULLUP);     
  pinMode(bir, INPUT_PULLUP);     
  pinMode(paraBitis, INPUT_PULLUP);     
  pinMode(su, INPUT_PULLUP); 
  pinMode(cay, INPUT_PULLUP);     
  pinMode(kahve, INPUT_PULLUP);     
  pinMode(cikolata, INPUT_PULLUP);     
  pinMode(biskuvi, INPUT_PULLUP);
  pinMode(siparisBitis, INPUT_PULLUP);
  pinMode(resetTusu, INPUT_PULLUP);
  
}

//float a=4.512342;
//char deneme[250];

void loop(){
  // read the state of the pushbutton value:  
  //Serial.println("kadir ");
  //Serial.println(a,2);
  //sprintf(deneme,"%d kere geldim %d kere gittim",4,5);
  //Serial.println(deneme);
  //delay(600);
  yirmibesDurumu = digitalRead(yirmibes);
  elliDurumu = digitalRead(elli);
  birDurumu = digitalRead(bir);
  paraBitisDurumu = digitalRead(paraBitis); 
  suDurumu = digitalRead(su);
  cayDurumu = digitalRead(cay);
  kahveDurumu = digitalRead(kahve);
  cikolataDurumu = digitalRead(cikolata);
  biskuviDurumu = digitalRead(biskuvi);
  siparisBitisDurumu = digitalRead(siparisBitis);
  resetTusuDurumu = digitalRead(resetTusu);
  // check if the pushbutton is pressed.
  // if it is, the buttonState is HIGH:

 //Müşteri bakiyesi alma
  if(yirmibesDurumu == LOW){
    delay(300);
    tempYirmibes++;
    lcd.clear();
    lcd.print("0.25TL");
  }
  if(elliDurumu == LOW){
    delay(300);
    tempElli++;
    lcd.clear();
    lcd.print("0.50TL");
  }
  if(birDurumu == LOW){
    delay(300);
    tempBir++;
    lcd.clear();
    lcd.print("1TL");
  }
  if(paraBitisDurumu == LOW){
    delay(300);
    bakiye();
  }
 
 //Sipariş alma 
  if(suDurumu == LOW){
    delay(300);
    tempSu++;
    lcd.clear();
  lcd.print("Su");
  }
  if(cayDurumu == LOW){
    delay(300);
    tempCay++;
    lcd.clear();
  lcd.print("Cay");
  }
  if(kahveDurumu == LOW){
    delay(300);
    tempKahve++;
    lcd.clear();
  lcd.print("Kahve");
  }
  if(cikolataDurumu == LOW){
    delay(300);
    tempCikolata++;
    lcd.clear();
  lcd.print("Cikolata");
  }
  if(biskuviDurumu == LOW){
    delay(300);
    tempBiskuvi++;
    lcd.clear();
    lcd.print("Buskivi");
  }
  if(siparisBitisDurumu == LOW){
    delay(300);
    siparisYukle();
  }
  if(resetTusuDurumu = LOW){
    delay(300);
    sifirla();
    lcd.clear();
    lcd.print("Sifirlandi");
    Serial.print("Siparişler ve Kullanıcı bakiyesi sıfırlandı.");
    
  }
}
